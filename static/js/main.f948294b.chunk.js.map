{"version":3,"sources":["redux/cartReducer.js","BooksItem/BooksItem.js","BooksItem/BooksItemContainer.js","api.js","redux/booksReducer.js","Cart/Cart.js","Cart/CartContainer.js","Header/Header.js","Header/HeaderContainer.js","redux/filterReducer.js","Filter/Filter.js","Filter/FilterContainer.js","useMediaQuery.js","App/App.js","App/AppContainer.js","serviceWorker.js","redux/store.js","index.js"],"names":["initialState","cartBooks","cartReducer","state","action","type","some","item","id","book","product","map","count","filter","BooksItem","props","Card","itemsPerRow","Image","src","image","wrapped","ui","Content","Header","title","Meta","className","author","extra","Icon","name","price","Button","onClick","addToCart","color","connect","dispatch","addToCartAC","booksAPI","axios","get","books","booksReducer","Cart","items","Item","size","as","Extra","deleteFromCart","Group","List","cart","deleteFromCartAC","handleItemClick","Menu","position","totalPrice","Popup","content","on","pinned","trigger","reduce","total","setFilterAC","searchQuery","multiplyFilters","filterReducer","query","filters","Filter","setFilter","setQuery","useState","Checked","setChecked","handleToggle","genre","filterType","currentIndex","indexOf","newChecked","push","splice","handleMultipleFilters","vertical","Checkbox","onChange","label","active","Input","value","e","target","icon","placeholder","rearchQuery","setQueryAC","setQueryТС","genres","handleMultipleFiltersТС","useMediaQuery","defaultMatches","window","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","App","lg","Container","sortBy","orderBy","o","toLowerCase","filterBooks","includes","filterGenres","getBooks","a","response","data","booksArr","key","BooksItemContainer","Boolean","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","basename","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f948294b.chunk.js","sourcesContent":["const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\n\r\nconst ADD_TO_CART = \" ADD_TO_CART\";\r\n\r\nconst initialState = {\r\n  cartBooks: []\r\n};\r\n\r\n\r\n\r\n\r\nexport const addToCartAC = (book) => {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    book\r\n  };\r\n};\r\n\r\nexport const deleteFromCartAC = (id) => {\r\n  return {\r\n    type: REMOVE_FROM_CART,\r\n    id\r\n  };\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      if (state.cartBooks.some((item) => item.id === action.book.product.id)) {\r\n        // increase count if item already exists in cart\r\n        return {\r\n          ...state,\r\n          cartBooks: state.cartBooks.map((item) =>\r\n            item.id === action.book.product.id\r\n              ? { ...item, count: item.count + 1 }\r\n              : item\r\n          )\r\n        }; // else add the new item to cart\r\n      }\r\n      return {\r\n        ...state,\r\n        cartBooks: [...state.cartBooks, { ...action.book.product, count: 1 }]\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartBooks: state.cartBooks\r\n          .map((item) => {\r\n            return item.id === action.id\r\n              ? { ...item, count: item.count - 1 }\r\n              : item;\r\n          })\r\n          .filter((item) => item.count > 0)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import React from 'react';\r\nimport {Card, Image, Icon, Button}  from \"semantic-ui-react\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst BooksItem = (props) => {\r\n\r\nconst handleClick = (book)=>{\r\n  \r\n  props.addToCart({\r\n    product:book,\r\n    count:1\r\n  })\r\n}\r\n\r\n    return (\r\n      \r\n        <Card itemsPerRow={4}>\r\n        <Image src={props.book.image} wrapped ui={false} />\r\n        <Card.Content>\r\n    <Card.Header>{props.book.title}</Card.Header>\r\n          <Card.Meta>\r\n            <span className='date'>{props.book.author}</span>\r\n          </Card.Meta>\r\n          \r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <a>\r\n            <Icon name=\"usd\" />\r\n           {props.book.price}\r\n          </a>\r\n        </Card.Content>\r\n        <Button onClick={()=> {handleClick(props.book)}} color='green'> Добавить в корзину\r\n    </Button>\r\n      </Card>\r\n    \r\n    );\r\n  }\r\n  \r\nexport default  BooksItem\r\n  \r\n\r\n  ","import {addToCartAC} from \"./../redux/cartReducer\"\r\nimport { connect } from \"react-redux\";\r\nimport BooksItem from \"./BooksItem\"\r\n\r\n\r\n  \r\n\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n     addToCart: (book) => {\r\n      dispatch(addToCartAC(book));\r\n    },\r\n    }\r\n  };\r\n  \r\n  export default connect( null, mapDispatchToProps)(BooksItem);","import axios from \"axios\";\r\n\r\nexport const booksAPI = {\r\n  getBooks() {\r\n    return axios.get(\"https://nomen1.github.io/online-shop/books.json\");\r\n  }\r\n};\r\n","import {booksAPI} from \"./../api\"\r\n\r\n\r\n\r\nconst SET_BOOKS = \"SET_BOOKS\";\r\n\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    books: []\r\n }\r\n\r\n export const setBooksAC = (books)=>{\r\n    return {\r\n        type: SET_BOOKS, books\r\n      };\r\n }\r\n\r\n export const getBooksTC = () =>{\r\n    return async (dispatch) => {\r\n      let response = await booksAPI.getBooks()\r\n       dispatch(setBooksAC(response.data))\r\n    }\r\n}\r\nconst booksReducer = (state = initialState, action) => {\r\n   switch(action.type){\r\n  \r\n\r\n  case SET_BOOKS:\r\n    return{\r\n        books: action.books\r\n    }\r\n  \r\n  \r\n\r\n default:\r\n    return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default booksReducer","import React from \"react\";\r\nimport { Item, Button, List } from \"semantic-ui-react\";\r\n\r\nconst Cart = (props) => {\r\n  const handleClick = (id) => {\r\n    props.deleteFromCart(id);\r\n  };\r\n\r\n  const items = props.cartBooks.map((book) => {\r\n  \r\n    return (\r\n      <Item>\r\n        <Item.Image size=\"tiny\" src={book.image} />\r\n        <Item.Content>\r\n    <Item.Header as=\"a\">{book.title}</Item.Header>\r\n          <Item.Meta>{book.author}</Item.Meta>\r\n          <Item.Extra>({book.count}) шт.</Item.Extra>\r\n          <Button\r\n            onClick={() => {\r\n              handleClick(book.id);\r\n            }}\r\n            \r\n            color=\"red\"\r\n          >\r\n            Удалить\r\n          </Button>\r\n        </Item.Content>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return <Item.Group>\r\n      <List.Content>\r\n        <List.Header>Корзина</List.Header>\r\n        \r\n      </List.Content>\r\n    {items}</Item.Group>;\r\n};\r\n\r\nexport default Cart;\r\n","import Cart from \"./Cart\" \r\nimport { connect } from \"react-redux\";\r\nimport {deleteFromCartAC} from \"./../redux/cartReducer\"\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n    cartBooks:state.cart.cartBooks\r\n    };\r\n  };\r\n\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      deleteFromCart: (id) => {\r\n        dispatch(deleteFromCartAC(id));\r\n      }\r\n    }\r\n  };\r\n  \r\n  export default connect( mapStateToProps, mapDispatchToProps)(Cart);\r\n    ","import React from 'react';\r\nimport {Menu, Icon, Popup} from \"semantic-ui-react\"\r\nimport Cart from \"./../Cart/CartContainer\"\r\n\r\n\r\nfunction Header(props) {\r\n    const handleItemClick = ()=>{\r\n\r\n    }\r\n  return (\r\n    <Menu>\r\n    \r\n\r\n    <Menu.Menu position='right'>\r\n      \r\n    <Menu.Item\r\n        name='price'\r\n        onClick={handleItemClick}\r\n      > \r\n        \r\n       Итого {props.totalPrice} <Icon name=\"usd\" />\r\n      </Menu.Item>\r\n\r\n\r\n     \r\n      <Popup\r\n    content={<Cart/>}\r\n    on='click'\r\n    pinned\r\n    trigger={<Menu.Item\r\n      name='card'\r\n      \r\n      onClick={handleItemClick}\r\n    > <Icon name='shop' />\r\n     {props.count}\r\n    </Menu.Item>}\r\n  />\r\n     \r\n     \r\n     \r\n     \r\n     \r\n     \r\n      \r\n    </Menu.Menu>\r\n  </Menu>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header","\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\"\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      totalPrice: state.cart.cartBooks.reduce((total, book)=>{ \r\n  return total + (book.price * book.count)\r\n      },0),\r\n      count: state.cart.cartBooks.reduce((total, book)=>{ \r\n  return total + book.count\r\n      },0)\r\n    }\r\n  \r\n  };\r\n  \r\n  \r\n  \r\n  export default connect(mapStateToProps)(Header);","\r\nconst SET_FILTER = \"SET_FILTER\";\r\nconst SET_QUERY = \"SET_QUERY\"\r\nconst SET_MULTIPLY_FILTERS = \"SET_MULTIPLY_FILTERS\"\r\n\r\nexport const setFilterAC = (filter)=>{\r\n    \r\n    return {\r\n        type: SET_FILTER, filter\r\n      };\r\n }\r\n\r\n\r\n export const setMultipleFiltersAC = (filters) => {\r\n  return {\r\n    type: SET_MULTIPLY_FILTERS,\r\n    filters\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n export  const setQueryAC = (query)=>{\r\n    \r\n    return {\r\n        type: SET_QUERY, query\r\n }\r\n }\r\n\r\n export const setQueryТС = (filter, query) =>{\r\n    \r\n    return  (dispatch) => {\r\n       dispatch(setFilterAC(filter))\r\n       dispatch(setQueryAC(query))\r\n    }\r\n}\r\n\r\nexport const handleMultipleFiltersТС = (genres, filterType) =>{\r\n    \r\n  return  (dispatch) => {\r\n     dispatch(setMultipleFiltersAC(genres))\r\n     dispatch(setFilterAC(filterType))\r\n     \r\n  }\r\n}\r\n\r\n\r\n\r\nconst initialState = {\r\n    filter:\"all\",\r\n    searchQuery: \" \",\r\n    multiplyFilters: []\r\n }\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n   \r\n \r\n   case SET_FILTER:\r\n     return{\r\n        ...state,\r\n         filter: action.filter\r\n     }\r\n   \r\n     case  SET_QUERY:\r\n       return {\r\n            ...state,\r\n            searchQuery: action.query,\r\n          };\r\n      case SET_MULTIPLY_FILTERS:\r\n        return {\r\n          ...state,\r\n          multiplyFilters: action.filters,\r\n        };\r\n\r\n  default:\r\n     return state;\r\n     }\r\n     \r\n }\r\n \r\n export default filterReducer","import { Menu, Input, Checkbox, List } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\nimport {useState} from \"react\"\r\n\r\nconst Filter = (props) => {\r\n  const { setFilter, setQuery } = props;\r\n\r\n  const [Checked, setChecked] = useState([])\r\n\r\n  const handleToggle = (genre, filterType) => {\r\n\r\n      const currentIndex = Checked.indexOf(genre);\r\n      const newChecked = [...Checked];\r\n\r\n      if (currentIndex === -1) {\r\n          newChecked.push(genre)\r\n      } else {\r\n          newChecked.splice(currentIndex, 1)\r\n      }\r\n\r\n      setChecked(newChecked)\r\n      props.handleMultipleFilters(newChecked, filterType)\r\n      \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleItemClick = (filter) => {\r\n    setFilter(filter);\r\n  };\r\n\r\n  const handleSetQuery = (filter, query) => {\r\n    setQuery(filter, query);\r\n  };\r\n\r\n  return (\r\n    <Menu vertical>\r\n\r\n     <Checkbox  onChange={() => handleToggle('classic', \"multiplayFilter\")} label='Классика' />\r\n      \r\n     <Checkbox  onChange={() => handleToggle('scientific', \"multiplayFilter\")} label='Научная литература' />\r\n     \r\n     <Checkbox  onChange={() => handleToggle('modern', \"multiplayFilter\")} label='Современная литература' />\r\n  \r\n\r\n      <Menu.Item\r\n        color = \"blue\"\r\n        active={props.filter === \"all\"}\r\n        onClick={() => {\r\n          handleItemClick(\"all\");\r\n        }}\r\n      >\r\n        Все\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        color = \"blue\"\r\n        active={props.filter === \"price_low\"}\r\n        onClick={() => {\r\n          handleItemClick(\"price_low\");\r\n        }}\r\n      >\r\n        По цене (дешевле)\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        color = \"blue\"\r\n        active={props.filter === \"price_high\"}\r\n        onClick={() => {\r\n          handleItemClick(\"price_high\");\r\n        }}\r\n      >\r\n        По цене (дороже)\r\n      </Menu.Item>\r\n\r\n      <Menu.Item\r\n        color = \"blue\"\r\n        active={props.filter === \"name\"}\r\n        onClick={() => {\r\n          handleItemClick(\"name\");\r\n        }}\r\n      >\r\n        По автору\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <Input\r\n          value={props.query}\r\n          onChange={(e) => {\r\n            handleSetQuery(\"search\", e.target.value);\r\n          }}\r\n          className=\"icon\"\r\n          icon=\"search\"\r\n          placeholder=\"Search...\"\r\n        />\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { setFilterAC, setQueryТС, handleMultipleFiltersТС } from \"./../redux/filterReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    query: state.filter.rearchQuery,\r\n    filter: state.filter.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFilter: (filter) => {\r\n      dispatch(setFilterAC(filter));\r\n    },\r\n    setQuery: (filter, query) => {\r\n      dispatch(setQueryТС(filter, query));\r\n    },\r\n    handleMultipleFilters: (genres,filterType) =>{\r\n      dispatch(handleMultipleFiltersТС(genres,filterType));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nlet useMediaQuery = (\r\n  query,\r\n  defaultMatches = window.matchMedia(query).matches\r\n) => {\r\n  const [matches, setMatches] = useState(defaultMatches);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n\r\n    if (media.matches !== matches) setMatches(media.matches);\r\n\r\n    const listener = () => setMatches(media.matches);\r\n\r\n    media.addListener(listener);\r\n\r\n    return () => media.removeListener(listener);\r\n  }, [query, matches]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport default useMediaQuery;","import React from 'react';\nimport '.././App.css';\nimport Header from \"../../src/Header/HeaderContainer\"\nimport {Container, Card} from \"semantic-ui-react\"\nimport Filter from \"../Filter/FilterContainer\"\nimport useMediaQuery from \"./../useMediaQuery\"\n\n\n\n\n\nconst App = (props)=> {\n\n\n  \n  const lg = useMediaQuery(\"(min-width: 1200px)\");\n\n  \n\n  return (\n    <Container>\n        <Header/>\n        <Filter/>\n        <Card.Group itemsPerRow = {lg && 8} >\n        {props.books}\n        </Card.Group>   \n    </Container>\n  \n  );\n}\n\n\nexport default App","import React from \"react\";\r\nimport \".././App.css\";\r\nimport BooksItemContainer from \"../../src/BooksItem/BooksItemContainer\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { getBooksTC } from \".././redux/booksReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport App from \".././App/App\";\r\n\r\n\r\nconst AppContainer = (props) => {\r\n  const { books, getBooks } = props;\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    getBooks();\r\n  }, []);\r\n\r\n  const booksArr = books.map((book, key) => {\r\n    return <BooksItemContainer book={book} key={key} />;\r\n  });\r\n\r\n  return <App books={booksArr} />;\r\n};\r\n\r\nconst filterBooks = (books, searchQuery) =>\r\n  books.filter(\r\n    (o) =>\r\n      o.title.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\r\n      o.author.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\r\n  );\r\n\r\nconst filterGenres =  (books, multiplyFilters) =>{\r\n   return books.filter(item =>{ \r\n    return multiplyFilters.includes(item.genre)\r\n   \r\n  })\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst sortBy = (books, filter, query, multiplyFilters) => {\r\n  switch (filter) {\r\n    case \"price_high\":\r\n      return orderBy(books, \"price\", \"desc\");\r\n    case \"price_low\":\r\n      return orderBy(books, \"price\", \"asc\");\r\n    case \"name\":\r\n      return orderBy(books, \"author\", \"asc\");\r\n    case \"search\":\r\n      return filterBooks(books, query);\r\n    case \"multiplayFilter\":\r\n      return filterGenres(books, multiplyFilters )\r\n    default:\r\n      return books;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    books: sortBy(\r\n      state.books.books,\r\n      state.filter.filter,\r\n      state.filter.searchQuery,\r\n      state.filter.multiplyFilters\r\n    )\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBooks: () => {\r\n      dispatch(getBooksTC());\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport booksReducer from \"./booksReducer\"\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n  books: booksReducer,\r\n  cart: cartReducer,\r\n  filter: filterReducer\r\n \r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunkMiddleware)\r\n  );\r\n  export default store;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App/AppContainer\"\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\"\nimport 'semantic-ui-css/semantic.min.css'\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\n\nReactDOM.render(\n  <BrowserRouter basename={\"https://nomen1.github.io/online-shop\"}>\n  <React.StrictMode>\n     <Provider store={store}>\n     \n    <App />\n    </Provider>\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}